<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sogou.crm.core.dao.agent.custmgr.CustomerCenterDao">
	
	<sql id="costTotalSql">
		sum(cpcb.spenda + cpcb.spendb + cpcb.spendc + cxb.spenda + cxb.spendb + cxb.spendc)/100
	</sql>
	
	<sql id="remainSql">
		sum(cpcb.remaina + cpcb.remainb + cpcb.remainc + cxb.remaina + cxb.remainb + cxb.remainc)/100
	</sql>
	
	<sql id="costSql">
		sum(cpcb.spenda + cpcb.spendb + cpcb.spendc + cxb.spenda + cxb.spendb + cxb.spendc)
	</sql>
	
	<sql id="costTotalOptSql">
		<choose>
			<when test="costTotalOpt == 1">
				<![CDATA[ >= ]]>
			</when>
			<when test="costTotalOpt == 2">
				<![CDATA[ <= ]]>
			</when>
			<when test="costTotalOpt == 3">
				<![CDATA[ = ]]>
			</when>
			<when test="costTotalOpt == 4">
				<![CDATA[ > ]]>
			</when>
			<when test="costTotalOpt == 5">
				<![CDATA[ < ]]>
			</when>
		</choose>
	</sql>
	
	<sql id="remainOptSql">
		<choose>
			<when test="customerRemainOpt == 1">
				<![CDATA[ >= ]]>
			</when>
			<when test="customerRemainOpt == 2">
				<![CDATA[ <= ]]>
			</when>
			<when test="customerRemainOpt == 3">
				<![CDATA[ = ]]>
			</when>
			<when test="customerRemainOpt == 4">
				<![CDATA[ > ]]>
			</when>
			<when test="customerRemainOpt == 5">
				<![CDATA[ < ]]>
			</when>
		</choose>
	</sql>
	
	<sql id="yesterdayOptSql">
		<choose>
			<when test="yesterdayCostOpt == 1">
				<![CDATA[ >= ]]>
			</when>
			<when test="yesterdayCostOpt == 2">
				<![CDATA[ <= ]]> 
			</when>
			<when test="yesterdayCostOpt == 3">
				<![CDATA[ = ]]>
			</when>
			<when test="yesterdayCostOpt == 4">
				<![CDATA[ > ]]>
			</when>
			<when test="yesterdayCostOpt == 5">
				<![CDATA[ < ]]>
			</when>
		</choose>
	</sql>
	
	<sql id="sevenDayOptSql">
		<choose>
			<when test="latelySevenDayCostOpt == 1">
				<![CDATA[ >= ]]>
			</when>
			<when test="latelySevenDayCostOpt == 2">
				<![CDATA[ <= ]]> 
			</when>
			<when test="latelySevenDayCostOpt == 3">
				<![CDATA[ = ]]>
			</when>
			<when test="latelySevenDayCostOpt == 4">
				<![CDATA[ > ]]>
			</when>
			<when test="latelySevenDayCostOpt == 5">
				<![CDATA[ < ]]>
			</when>
		</choose>
	</sql>
	
	<select id="queryAllCSByUser" parameterType="com.sogou.crm.core.bo.auth.User" resultType="java.lang.Integer">
		select au.user_id from cpc.agent_user au where au.user_companyid = #{agentId} and au.user_type = '${userBiz}cs'
	</select>
	
	<select id="queryAllOPByUser" parameterType="com.sogou.crm.core.bo.auth.User" resultType="java.lang.Integer">
		select au.user_id from cpc.agent_user au where au.user_companyid = #{agentId} and au.user_type = '${userBiz}op'
	</select>

	<select id="queryCustomerListFromAdonline" parameterType="com.sogou.crm.core.dto.agent.CustomerCenterQuery"
		resultType="com.sogou.crm.core.bo.agent.custmgr.CustomerCenter">
		select distinct cu.i_account_id customerId, cu.c_company_name customerName, 
			   cu.c_email customerEmail, cu.c_web url,
        	   decode(cs.user_id , null,  -1, cs.user_id) csId, 
        	   decode(auiCs.real_name, null, '无对应客服', auiCs.real_name) customerService, 
        	   decode(op.user_id, null, -2, op.user_id) opId, 
        	   decode(auiOp.real_name , null,   '无对应销售', auiOp.real_name)  customerSell, 
        	   cu.c_status customerStatus, cu.c_product product, cu.d_regist_date register,
        	   ind.indusid firstTradeCode, ind.name1 firstTrade, 
        	   sind.indusid secondTradeCode, sind.name1 secondTrade, 
        	   tind.indusid thirdTradeCode, tind.name1 thirdTrade, 
        	   <include refid="costTotalSql" /> costTotal, 
        	   <include refid="remainSql"/> customerRemain
		from cpc.account cu
		<if test="!user.ifAgent">
			 inner join cpc.account_dis ad on ad.account_id = cu.i_account_id
			 inner join cpc.agent_user_auth aua on aua.user_id = ad.user_id
		</if>
		left join cpc.account_dis cs on cs.account_id = cu.i_account_id and cs.user_id in 
        <foreach collection="csIdList" index="index" item="item" open="(" separator="," close=")"> 
        	#{item} 
     	</foreach> 
     	left join cpc.agent_user auiCs on auiCs.user_id = cs.user_id
		left join cpc.account_dis op on op.account_id = cu.i_account_id and op.user_id in
	    <foreach collection="opIdList" index="index" item="item" open="(" separator="," close=")"> 
	    	#{item} 
	    </foreach>
		left join cpc.agent_user auiOp on auiOp.user_id = op.user_id
		left join cpc.indus ind on ind.indusid = cu.c_industry 
  		left join cpc.indus sind on sind.indusid = ind.parentid 
  		left join cpc.indus tind on tind.indusid = sind.parentid
		left join cpc.cpcbill cpcb on cpcb.accountid = cu.i_account_id 
  		left join cpc.cxbill cxb on cxb.accountid = cu.i_account_id 
		where cu.${user.agentIDFieldOracle} = #{user.agentId} and cu.c_privilege != 'a3'
		<if test="!user.ifAgent">
			and aua.data_auth like '${user.agentDataAuth}%'
		</if>
		<if test="selectCustomerValue != null and selectCustomerValue != ''">
			<choose>
				<when test="selectCustomerId == 1">
					and cu.i_account_id = #{selectCustomerValue}
				</when>
				<when test="selectCustomerId == 2">
					and cu.c_company_name like '%${selectCustomerValue}%'
				</when>
				<when test="selectCustomerId == 3">
					and cu.c_email like '%${selectCustomerValue}%'
				</when>
				<when test="selectCustomerId == 4">
					and auiCs.real_name like '%${selectCustomerValue}%'
				</when>
				<when test="selectCustomerId == 5">
					and auiOp.real_name like '%${selectCustomerValue}%'
				</when>
				<when test="selectCustomerId == 6">
					and cu.c_web like '%${selectCustomerValue}%'
				</when>
			</choose>
		</if>
		<if test="registerDate != null">
			<if test="registerDate.start != null and registerDate.end != null">
				and cu.d_regist_date between to_date(#{registerDate.start}, 'yyyy-mm-dd') 
					and to_date(#{registerDate.end}, 'yyyy-mm-dd')
			</if>
		</if>
		<if test="productType != null and productType != ''">
			<choose>
				<when test="productType == 1">
					and cu.c_product like '1%'
				</when>
				<when test="productType == 2">
					and substr(cu.c_product, 5) like '1%'
				</when>
				<when test="productType == 3">
					and substr(cu.c_product, 3) like '1%'
				</when>
			</choose>
		</if>
		<choose>
			<when test="customerStatus != null and customerStatus != ''">
				and cu.c_status = 
				<choose>
					<when test="customerStatus == 1">
						'正常'
					</when>
					<when test="customerStatus == 2">
						'暂停'
					</when>
					<when test="customerStatus == 4">
						'拒绝'
					</when>
					<when test="customerStatus == 5">
						'待审核'
					</when>
					<when test="customerStatus == 6">
						'未入资'
					</when>
					<when test="customerStatus == 7">
						'不入资'
					</when>
				</choose>
			</when>
			<otherwise>
				and cu.c_status in ('正常','暂停','拒绝','待审核','未入资','不入资')
			</otherwise>
		</choose>
		group by cu.i_account_id, cu.c_company_name, cu.c_email, cu.c_web, cs.user_id, auiCs.real_name, 
				 op.user_id, auiOp.real_name, cu.c_status, cu.c_product, cu.d_regist_date,
				 ind.indusid, ind.name1, sind.indusid, sind.name1, tind.indusid , tind.name1 
		having 1 = 1
		<if test="costTotal != null">
			and <include refid="costTotalSql" /> <include refid="costTotalOptSql" /> #{costTotal}
		</if>
		<if test="customerRemain != null">
			and <include refid="remainSql"/> <include refid="remainOptSql" /> #{customerRemain}
		</if>
		order by cu.d_regist_date desc
	</select>
	
	<select id="queryCustomerListFromCrm" parameterType="com.sogou.crm.core.dto.agent.CustomerCenterQuery"
		resultType="com.sogou.crm.core.bo.agent.custmgr.CustomerCenter">
		select t.customerId customerId, sum(t.yesterdayCost) yesterdayCost, 
			   sum(t.latelySevenDayCost) latelySevenDayCost, sum(t.latelyFourteenDayCost) latelyFourteenDayCost, 
			   lot.last_opt_time latelyUpdateDate
		from (
			select csd.cust_id customerId, sum(csd.pay)/100 yesterdayCost, 0 latelySevenDayCost, 0 latelyFourteenDayCost
			from t_cust_stat_day csd
			where csd.${user.agentIDField} = #{user.agentId}
			and csd.date between date_sub(current_date,interval 1 day) and date_sub(current_date,interval 1 day)
			group by csd.cust_id
			union all 
			select csd.cust_id customerId, 0 yesterdayCost, round(sum(csd.pay)/700, 2) latelySevenDayCost, 0 latelyFourteenDayCost
			from t_cust_stat_day csd
			where csd.${user.agentIDField} = #{user.agentId} 
			and csd.date between date_sub(current_date,interval 7 day) and date_sub(current_date,interval 1 day)
			group by csd.cust_id
			union all
			select csd.cust_id customerId, 0 yesterdayCost, 0 latelySevenDayCost, sum(csd.pay)/1400 latelyFourteenDayCost
			from t_cust_stat_day csd
			where csd.${user.agentIDField} = #{user.agentId} 
			and csd.date between date_sub(current_date,interval 14 day) and date_sub(current_date,interval 1 day)
			group by csd.cust_id) t
		left join t_last_opt_time lot on lot.cust_id = t.customerId
		<if test="!user.ifAgent">
			inner join t_customer_dis cd on cd.cust_id = lot.cust_id
			inner join t_agent_user_auth aua on aua.agent_user_id = cd.agent_user_id
		</if>
		where 1 = 1
		<if test="!user.ifAgent">
			and aua.data_auth like '${user.agentDataAuth}%'
		</if>
		<if test="latelyUpdateTime != null">
			<if test="latelyUpdateTime.start != null and latelyUpdateTime.end != null">
				and lot.last_opt_time between str_to_date(#{latelyUpdateTime.start}, '%Y-%m-%d') 
					and date_add(#{latelyUpdateTime.end}, interval 1 day)
			</if>
		</if>
		group by t.customerId
		having 1 = 1
		<if test="yesterdayCost != null">
			and yesterdayCost <include refid="yesterdayOptSql"/> #{yesterdayCost}
		</if>
		<if test="latelySevenDayCost != null">
			and latelySevenDayCost <include refid="sevenDayOptSql"/> #{latelySevenDayCost}
		</if>
	</select>
		
</mapper>

